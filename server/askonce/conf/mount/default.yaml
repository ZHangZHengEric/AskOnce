#app端口
port: 20034
appName: askonce
log:
  level:  INFO
  stdout: true

##################################
mysql:
  default:
    database: askonce
    addr: ${BACKEND_MYSQL_ADDR}
    user: ${BACKEND_MYSQL_USER}
    password: ${BACKEND_MYSQL_PASSWORD}

redis:
  default:
    addr: ${BACKEND_REDIS_ADDR}
    password: ${BACKEND_REDIS_PASSWORD}

minioConf:
  addr: ${BACKEND_MINIO_ADDR}
  ak: ${BACKEND_MINIO_AK}
  sk: ${BACKEND_MINIO_SK}


elastic:
  addr: ${BACKEND_ES_ADDR}
  username: ${BACKEND_ES_USERNAME}
  password: ${BACKEND_ES_PASSWORD}

channel:
  chat:
    addr: ${BACKEND_CHANNEL_CHAT_ADDR}
    ak: ${BACKEND_CHANNEL_CHAT_AK}
    model: ${BACKEND_CHANNEL_CHAT_MODEL}
  embedding:
    addr: ${BACKEND_CHANNEL_EMBEDDING_ADDR}
    ak: ${BACKEND_CHANNEL_EMBEDDING_AK}
    model: ${BACKEND_CHANNEL_EMBEDDING_MODEL}


api:
  jobd:
    # 调用下游的服务名称
    service: jobd
    # 请求完整地址
    domain: ${JOBD_ADDR}
    # 超时配置，time.Duration 类型
    timeout: 60s
    # 重试次数，最多执行retry+1次
    retry: 2
  bochaai:
    # 调用下游的服务名称
    service: bochaai
    # 请求完整地址
    domain: https://api.bochaai.com
    # 超时配置，time.Duration 类型
    timeout: 60s
    # 重试次数，最多执行retry+1次
    retry: 2
  gouno:
    service: gouno
    # 请求完整地址
    domain: ${GOUNO_ADDR}
    # 超时配置，time.Duration 类型
    timeout: 60s
    # 重试次数，最多执行retry+1次
    retry: 2

